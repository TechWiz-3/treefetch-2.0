#!/bin/bash

RESET="\033[0;m"
BOLD="\033[1;m"
BOLD=""

A="\033[32m"
B="\033[32m"

A="\033[38;5;200m"
B="\033[38;5;206m"

A="\033[38;5;92m"
B="\033[38;5;89m"

A="\033[38;5;100m"
B="\033[38;5;243m"


A="\033[38;5;160m"
B="\033[38;5;33m"

A="\033[30m"
B="\033[35m"

A="\033[32m"
B="\033[34m"


os=$(./utils/get_os | awk 'NR==1 {print $2 " " $3 " " $4}')
os_ver=$(./utils/get_os | awk 'NR==2 {print $2 " " $3 " " $4}')

pkgs=$(./utils/get_packages)
#pkg_names=$(./utils/get_packages --names)

if [ -z "$DE"]
then
    de=$(./utils/get_desktop)
    if [[ "$de" == "XDG_CURRENT_DESKTOP env not found" || "$DE" == "de not recognised" ]]
    then
        ignore_de=true
    fi
else
    de="${DE}"
fi

if [ -z "$WM" ]
then
    wm=$(./utils/get_wm)
    if [[ "$wm" = "wm not found please submit an issue" || $"WM" == "error, no env variable with name wm, WM, WINDOW_MANAGER or window_manager found" ]]
    then
        ignore_wm="true"
    fi
else
    wm="${WM}"
fi


if [[ "$ignore_de" == "true" && "$ignore_wm" == "true" ]]
then
	# tree structure copied from tfetch
	echo -e """.
${RESET}├─ ${BOLD}${A}distro${RESET}
${RESET}│  ├─ ${B}${os}${RESET}
${RESET}│  └─ ${B}${os_ver}${RESET}
${RESET}├─ ${BOLD}${A}packages${RESET}
${RESET}│  └─ ${B}all${RESET}
${RESET}│     └─ ${B}${pkgs}${RESET}
${RESET}└─ ${BOLD}${A}shell${RESET}
${RESET}   └─ ${B}${SHELL##*/}${RESET}
"""

else
	# tree structure copied from tfetch
	echo -e """.
${RESET}├─ ${BOLD}${A}distro${RESET}
${RESET}│  ├─ ${B}${os}${RESET}
${RESET}│  └─ ${B}${os_ver}${RESET}
${RESET}├─ ${BOLD}${A}packages${RESET}
${RESET}│  └─ ${B}all${RESET}
${RESET}│     └─ ${B}${pkgs}${RESET}
${RESET}├─ ${BOLD}${A}env${RESET}
${RESET}│  ├─ ${BOLD}${B}de${RESET}
${RESET}│  │  └─ ${B}${de}${RESET}
${RESET}│  └─ ${BOLD}${B}wm${RESET}
${RESET}│     └─ ${B}${wm}${RESET}
${RESET}└─ ${BOLD}${A}shell${RESET}
${RESET}   └─ ${B}${SHELL##*/}${RESET}
"""
fi
