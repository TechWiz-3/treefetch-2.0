#!/bin/bash

RESET="\033[0;m"
c1="$(printf '%b\e[3%sm' "$RESET" 3)"
c2="$(printf '%b\e[3%sm' "$RESET" 1)"
c2=$(echo -e "${RESET}\033[38;5;208m")
# \e[34m
c3=$(echo -e "${RESET}\033[38;5;14m")
c3=$(echo -e "${RESET}\033[38;5;215m")
# c3=$(printf '%b\e[38;5;206m%sm')

os=$(./utils/get_os | awk 'NR==1 {print $2 " " $3 " " $4}')
os_ver=$(./utils/get_os | awk 'NR==2 {print $2 " " $3 " " $4}')

pkgs=$(./utils/get_packages)
#pkg_names=$(./utils/get_packages --names)

if [ -z "$DE" ]
then
    de=$(./utils/get_desktop)
    if [[ "$de" == "XDG_CURRENT_DESKTOP env not found" || "$DE" == "de not recognised" ]]
    then
        ignore_de=true
    fi
else
    de="${DE}"
fi

if [ -z "$WM" ]
then
    wm=$(./utils/get_wm)
    if [[ "$wm" == "wm not found please submit an issue" || "$WM" == "error, no env variable with name wm, WM, WINDOW_MANAGER or window_manager found" ]]
    then
        ignore_wm="true"
    fi
else
    wm="${WM}"
fi


if [[ "$ignore_de" == "true" && "$ignore_wm" == "true" ]]
then
	# tree structure copied from tfetch
	echo -e ".
${RESET}├─ ${BOLD}${A}distro${RESET}
${RESET}│  ├─ ${B}${os}${RESET}
${RESET}│  └─ ${B}${os_ver}${RESET}
${RESET}├─ ${BOLD}${A}packages${RESET}
${RESET}│  └─ ${B}all${RESET}
${RESET}│     └─ ${B}${pkgs}${RESET}
${RESET}└─ ${BOLD}${A}shell${RESET}
${RESET}   └─ ${B}${SHELL##*/}${RESET}
"

else
	# tree structure copied from tfetch
	echo -e ".
├─ ${c1}distro${RESET}
│  ├─ ${c3}${os}${RESET}
│  └─ ${c3}${os_ver}${RESET}
├─ ${c1}packages${RESET}
│  └─ ${c2}all${RESET}
│     └─ ${c3}${pkgs}${RESET}
├─ ${c1}env${RESET}
│  ├─ ${c2}de${RESET}
│  │  └─ ${c3}${de}${RESET}
│  └─ ${c2}wm${RESET}
│     └─ ${c3}${wm}${RESET}
└─ ${c1}shell${RESET}
   └─ ${c3}${SHELL##*/}${RESET}
"
fi
